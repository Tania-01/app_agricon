import React from 'react';
import { View, StyleSheet, TouchableOpacity, Text, Alert } from 'react-native';
import { useRouter } from 'expo-router';
import AsyncStorage from '@react-native-async-storage/async-storage';

const HomeScreen = () => {
    const router = useRouter();

    const confirmLogout = () => {
        Alert.alert(
            "–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –≤–∏—Ö–æ–¥—É",
            "–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–π—Ç–∏ –∑ –∞–∫–∞—É–Ω—Ç–∞?",
            [
                { text: "–°–∫–∞—Å—É–≤–∞—Ç–∏", style: "cancel" },
                { text: "–¢–∞–∫", onPress: handleLogout },
            ],
            { cancelable: true }
        );
    };

    const handleLogout = async () => {
        try {
            await AsyncStorage.removeItem('token');
            router.replace('/LoginScreen'); // üîπ –ø–µ—Ä–µ–∫–∏–¥–∞—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ:', error);
            Alert.alert('–ü–æ–º–∏–ª–∫–∞', '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–π—Ç–∏ –∑ –∞–∫–∞—É–Ω—Ç–∞');
        }
    };

    return (
        <View style={styles.container}>
            <View style={styles.buttonGrid}>
                <TouchableOpacity
                    style={[styles.button, styles.redButton]}
                    onPress={() => router.push('/WorkInputForm')}
                >
                    <Text style={styles.buttonText}>–ü–æ–¥–∞—á–∞ –æ–±`—î–º—É –≤–∏–∫–æ–Ω–∞–Ω–∏—Ö —Ä–æ–±—ñ—Ç</Text>
                </TouchableOpacity>

                <TouchableOpacity
                    style={[styles.button, styles.whiteButton]}
                    onPress={() => router.push('/ReportScreen')}
                >
                    <Text style={[styles.buttonText, { color: '#C62828' }]}>–ó–≤—ñ—Ç–∏</Text>
                </TouchableOpacity>

                <TouchableOpacity
                    style={[styles.button, styles.whiteButton]}
                    onPress={() => router.push('/ChangePasswordScreen')}
                >
                    <Text style={[styles.buttonText, { color: '#C62828' }]}>–ó–º—ñ–Ω–∏—Ç–∏ –ø–∞—Ä–æ–ª—å</Text>
                </TouchableOpacity>

                {/* üîπ –ö–Ω–æ–ø–∫–∞ –Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è */}
                <TouchableOpacity
                    style={[styles.button, styles.whiteButton]}
                    onPress={() => router.push('/instruction')}
                >
                    <Text style={[styles.buttonText, { color: '#C62828' }]}>–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è</Text>
                </TouchableOpacity>

                {/* üîπ –ö–Ω–æ–ø–∫–∞ –≤–∏—Ö–æ–¥—É */}
                <TouchableOpacity
                    style={[styles.button, styles.logoutButton]}
                    onPress={confirmLogout}
                >
                    <Text style={styles.logoutText}>–í–∏–π—Ç–∏ –∑ –∞–∫–∞—É–Ω—Ç–∞</Text>
                </TouchableOpacity>
            </View>
        </View>
    );
};

export default HomeScreen;

const styles = StyleSheet.create({
    container: {
        flex: 1,
        backgroundColor: '#FFFFFF',
        justifyContent: 'flex-end',
        alignItems: 'center',
        paddingBottom: 40,
    },
    buttonGrid: {
        width: '90%',
        alignItems: 'center',
    },
    button: {
        width: '100%',
        padding: 16,
        borderRadius: 8,
        alignItems: 'center',
        marginBottom: 12,
    },
    redButton: {
        backgroundColor: '#C62828',
    },
    whiteButton: {
        backgroundColor: '#FFFFFF',
        borderWidth: 1,
        borderColor: '#C62828',
    },
    logoutButton: {
        backgroundColor: '#E0E0E0',
        borderWidth: 1,
        borderColor: '#C62828',
        marginTop: 10,
    },
    buttonText: {
        color: '#FFFFFF',
        fontWeight: 'bold',
        fontSize: 16,
    },
    logoutText: {
        color: '#C62828',
        fontWeight: 'bold',
        fontSize: 16,
    },
});
